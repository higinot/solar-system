{"ast":null,"code":"var _jsxFileName = \"/home/jade/Documentos/Pages/solar-system/src/components/PlanetCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classP = 'd-flex justify-content-center fs-6 text-white fw-bold';\nconst classImg = 'rounded mx-auto d-block';\n\nclass PlanetCard extends React.Component {\n  render() {\n    const {\n      planetName,\n      planetImage\n    } = this.props;\n    const cImg = `${classImg}  ${planetName}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"planet-card\",\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: planetImage,\n        alt: `Planeta ${planetName}`,\n        className: cImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"planet-name\",\n        className: classP,\n        children: planetName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPlanetCard.propTypes = {\n  planetName: PropTypes.string.isRequired,\n  planetImage: PropTypes.string.isRequired\n};\nexport default PlanetCard;","map":{"version":3,"names":["React","PropTypes","classP","classImg","PlanetCard","Component","render","planetName","planetImage","props","cImg","propTypes","string","isRequired"],"sources":["/home/jade/Documentos/Pages/solar-system/src/components/PlanetCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nconst classP = 'd-flex justify-content-center fs-6 text-white fw-bold';\nconst classImg = 'rounded mx-auto d-block';\n\nclass PlanetCard extends React.Component {\n  render() {\n    const { planetName, planetImage } = this.props;\n    const cImg = `${classImg}  ${planetName}`;\n    return (\n      <div data-testid=\"planet-card\" className=\"col\">\n        <img\n          src={ planetImage }\n          alt={ `Planeta ${planetName}` }\n          className={ cImg }\n        />\n        <p data-testid=\"planet-name\" className={ classP }>\n          {planetName}\n        </p>\n      </div>\n    );\n  }\n}\n\nPlanetCard.propTypes = {\n  planetName: PropTypes.string.isRequired,\n  planetImage: PropTypes.string.isRequired,\n};\n\nexport default PlanetCard;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP;;AAEA,MAAMC,MAAM,GAAG,uDAAf;AACA,MAAMC,QAAQ,GAAG,yBAAjB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;EACvCC,MAAM,GAAG;IACP,MAAM;MAAEC,UAAF;MAAcC;IAAd,IAA8B,KAAKC,KAAzC;IACA,MAAMC,IAAI,GAAI,GAAEP,QAAS,KAAII,UAAW,EAAxC;IACA,oBACE;MAAK,eAAY,aAAjB;MAA+B,SAAS,EAAC,KAAzC;MAAA,wBACE;QACE,GAAG,EAAGC,WADR;QAEE,GAAG,EAAI,WAAUD,UAAW,EAF9B;QAGE,SAAS,EAAGG;MAHd;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAG,eAAY,aAAf;QAA6B,SAAS,EAAGR,MAAzC;QAAA,UACGK;MADH;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AAhBsC;;AAmBzCH,UAAU,CAACO,SAAX,GAAuB;EACrBJ,UAAU,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UADR;EAErBL,WAAW,EAAEP,SAAS,CAACW,MAAV,CAAiBC;AAFT,CAAvB;AAKA,eAAeT,UAAf"},"metadata":{},"sourceType":"module"}